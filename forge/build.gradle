plugins {
    id 'com.github.johnrengelman.shadow'
}

loom {
    /*
    forge {
        mixinConfig "example_mod.mixins.json"
    }*/
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        url = "https://api.modrinth.com/maven"
    }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"

    modImplementation "dev.architectury:architectury-forge:${rootProject.architectury_api_version}"

    if(rootProject.hasProperty("midnightlib_version")) {
        modImplementation  "maven.modrinth:midnightlib:${project.midnightlib_version}-forge"
    } else {
        modImplementation("me.shedaniel.cloth:cloth-config-forge:${cloth_version}")
    }

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')
}


shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
